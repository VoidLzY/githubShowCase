[1,["ecpdLyjvZBwrvm+cedCcQy","a2MjXRFdtLlYQ5ouAFv/+R","63Tid6naZFqpOTHHBYKI3i","98XYwqYM5F/I0fOm7ChSgw"],["node","_spriteFrame","root","tobgCtl","data","_effectAsset"],[["cc.Node",["_name","_active","_prefab","_components","_parent","_contentSize","_trs","_children","_color","_eulerAngles"],1,4,9,1,5,7,2,5,5],["cc.PrefabInfo",["fileId","root","asset"],2,1,1],["cc.Prefab",["_name"],2],["cc.Node",["_name","_parent","_children","_components","_prefab"],2,1,2,2,4],["cc.Node",["_name","_active","_parent","_components","_prefab","_color","_contentSize","_trs"],1,1,12,4,5,5,7],["cc.Widget",["_alignFlags","_originalWidth","_originalHeight","node"],0,1],["a7d4fiKzPpAurlu42K2B7Oc",["node","moveBall","tobgCtl"],3,1,12,1],["cc.Sprite",["_sizeMode","node","_materials","_spriteFrame"],2,1,3,6],["cc.BlockInputEvents",["node"],3,1],["cc.Button",["_N$transition","node","clickEvents"],2,1,9],["cc.ClickEvent",["_componentId","handler","target"],1,1],["375dadRbOtOKK/ZLAwWP0N1",["node"],3,1],["521c2szmehOMLzM6k8UXhsZ",["node"],3,1],["81d40wig5VHCLS4HmfLxcHH",["node"],3,1],["a35417QS/lHJY0qtjMa8+UU",["node","startNode"],3,1,1],["cc.Label",["_string","_N$horizontalAlign","_N$verticalAlign","node","_materials"],0,1,3],["cc.Material",["_name","_techniqueData"],1],["cc.EffectAsset",["_name","shaders","techniques"],0]],[[1,0,1,2,2],[7,0,1,2,3,2],[0,0,4,3,2,8,5,2],[0,0,4,7,3,2,5,6,2],[9,0,1,2,2],[10,0,1,2,3],[15,0,1,2,3,4,4],[5,0,1,2,3,4],[2,0,2],[0,0,7,3,2,5,6,2],[0,0,4,7,2,2],[0,0,4,3,2,8,5,6,9,2],[0,0,1,4,3,2,8,5,3],[0,0,4,3,2,6,2],[3,0,1,2,3,4,2],[4,0,1,2,3,4,5,6,7,3],[6,0,1,2,1],[1,1,2,1],[8,0,1],[11,0,1],[12,0,1],[13,0,1],[14,0,1,1],[16,0,1,3],[17,0,1,2,4]],[[[[8,"DlgBezierLine"],[9,"DlgBezierLine",[-6,-7,-8,-9,-10],[[7,45,1920,1080,-2],[16,-5,[[null,-4],0,1],-3]],[17,-1,0],[5,1920,1080],[960,540,0,0,0,0,1,1,1,1]],[2,"bg",1,[[1,0,-11,[0],1],[7,45,1920,1080,-12],[18,-13]],[0,"d8U6ez1WdG1qHtXzOg5X7P",1,0],[4,4290888129],[5,1920,1080]],[14,"ThirdOrderBezierGrp",1,[-15,-16],[-14],[0,"a9bIwDP8dAgb1ldBrmSXTe",1,0]],[10,"btnGrp",1,[-17,-18,-19],[0,"52PMlSHnFDKbxsr//lXS3a",1,0]],[3,"ball2MoveBtn",4,[-22],[[1,0,-20,[9],10],[4,3,-21,[[5,"a7d4fiKzPpAurlu42K2B7Oc","ball2Move",1]]]],[0,"f8SypN6TFIS7dUAoyl4O9r",1,0],[5,150,100],[-208.898,-386.467,0,0,0,0,1,1,1,0]],[3,"delateOneGrp",4,[-25],[[1,0,-23,[12],13],[4,3,-24,[[5,"a7d4fiKzPpAurlu42K2B7Oc","delateOneGrp",1]]]],[0,"14qsr2OQ5P7oMMn9dzm/a2",1,0],[5,150,100],[25.449,-386.467,0,0,0,0,1,1,1,0]],[3,"addOneGrp",4,[-28],[[1,0,-26,[15],16],[4,3,-27,[[5,"a7d4fiKzPpAurlu42K2B7Oc","addOneGrp",1]]]],[0,"d7/AudlRxAyaDNDAJ7xX+D",1,0],[5,150,100],[266.672,-386.467,0,0,0,0,1,1,1,0]],[11,"MidLine",1,[[1,0,-29,[2],3],[19,-30]],[0,"5eNeXU9f9PbbHk+Gx7i2XH",1,0],[4,4292195152],[5,1080,100],[0,0,0,0,0,0.7071067811865475,0.7071067811865476,1,1,1],[1,0,0,90]],[12,"startPoint",false,3,[[1,0,-31,[4],5]],[0,"63vi4bUn5NjL3LzkMyahHC",1,0],[4,4284835243],[5,100,100]],[15,"ball2",false,3,[[-32,[1,0,-33,[6],7]],1,4],[0,"21OWauSqJHlZMZkLT9zIC5",1,0],[4,4278190080],[5,40,40],[0,7.853,0,0,0,0,1,1,1,1]],[13,"MoreOrderBezier",1,[[20,-34]],[0,"4boDf09RNAD5Pst0qzznDS",1,0],[-480,0,0,0,0,0,1,1,1,1]],[21,10],[22,3,9],[2,"New Label",5,[[6,"小球运动",1,1,-35,[8]]],[0,"e8GkZB1MpALrbEbAFWr5fH",1,0],[4,4278190080],[5,160,50.4]],[2,"New Label",6,[[6,"减少一组",1,1,-36,[11]]],[0,"f98k5adsJEVZR7G6fOLZBh",1,0],[4,4278190080],[5,160,50.4]],[2,"New Label",7,[[6,"增加一组",1,1,-37,[14]]],[0,"b6Kxft7wlLTous0uMfesVi",1,0],[4,4278190080],[5,160,50.4]]],0,[0,2,1,0,0,1,0,3,13,0,-2,12,0,0,1,0,-1,2,0,-2,8,0,-3,11,0,-4,3,0,-5,4,0,0,2,0,0,2,0,0,2,0,-1,13,0,-1,9,0,-2,10,0,-1,5,0,-2,6,0,-3,7,0,0,5,0,0,5,0,-1,14,0,0,6,0,0,6,0,-1,15,0,0,7,0,0,7,0,-1,16,0,0,8,0,0,8,0,0,9,0,-1,12,0,0,10,0,0,11,0,0,14,0,0,15,0,0,16,0,4,1,37],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[-1,1,-1,1,-1,1,-1,1,-1,-1,1,-1,-1,1,-1,-1,1],[0,1,2,1,0,1,0,1,0,0,1,0,0,1,0,0,1]],[[[23,"blueWave",{"0":{"defines":{},"props":{"frequency":100,"angularVelocity":40,"amplitude":0.1}}}]],0,0,[0],[5],[3]],[[[24,"blueWave",[{"hash":1893076749,"record":null,"name":"blueWave|vs|fs","glsl3":{"vert":"\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nin vec3 a_position;\nin vec4 a_color;\nin vec2 a_uv0;\nout vec4 v_color;\nout vec2 v_uv0;\nvoid main () {\n  gl_Position = cc_matViewProj * vec4(a_position, 1);\n  v_color = a_color;\n  v_uv0 = a_uv0;\n}","frag":"\n  precision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\n  in vec4 v_color;\n  in vec2 v_uv0;\n  uniform sampler2D texture;\n  uniform Properties {\n    float amplitude;\n    float angularVelocity;\n    float frequency;\n    float offset;\n    bool toLeft;\n  };\n  void main () {\n    vec4 color = v_color;\n    color *= texture(texture, v_uv0);\n    if(color.a == 0.0) discard;\n    float time = cc_time.x;\n    float y = amplitude * sin((angularVelocity * v_uv0.x) + ((frequency * time) * (toLeft ? 1. : -1.))) + offset;\n    if(v_uv0.y < y) discard;\n    gl_FragColor = color;\n  }"},"glsl1":{"vert":"\nprecision highp float;\nuniform mat4 cc_matViewProj;\nattribute vec3 a_position;\nattribute vec4 a_color;\nattribute vec2 a_uv0;\nvarying vec4 v_color;\nvarying vec2 v_uv0;\nvoid main () {\n  gl_Position = cc_matViewProj * vec4(a_position, 1);\n  v_color = a_color;\n  v_uv0 = a_uv0;\n}","frag":"\n  precision highp float;\nuniform vec4 cc_time;\n  varying vec4 v_color;\n  varying vec2 v_uv0;\n  uniform sampler2D texture;\n  uniform float amplitude;\nuniform float angularVelocity;\nuniform float frequency;\nuniform float offset;\nuniform bool toLeft;\n  void main () {\n    vec4 color = v_color;\n    color *= texture2D(texture, v_uv0);\n    if(color.a == 0.0) discard;\n    float time = cc_time.x;\n    float y = amplitude * sin((angularVelocity * v_uv0.x) + ((frequency * time) * (toLeft ? 1. : -1.))) + offset;\n    if(v_uv0.y < y) discard;\n    gl_FragColor = color;\n  }"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]}],"samplers":[]},"locals":{"blocks":[],"samplers":[]}},"defines":[],"blocks":[{"name":"Properties","binding":0,"members":[{"name":"amplitude","type":13,"count":1},{"name":"angularVelocity","type":13,"count":1},{"name":"frequency","type":13,"count":1},{"name":"offset","type":13,"count":1},{"name":"toLeft","type":1,"count":1}],"defines":[]}],"samplers":[{"name":"texture","type":29,"count":1,"binding":30,"defines":[]}]}],[{"passes":[{"program":"blueWave|vs|fs","blendState":{"targets":[{"blend":true}]},"rasterizerState":{"cullMode":0},"properties":{"amplitude":{"type":13,"value":[0.05],"range":[0,0.5],"editor":{"tooltip":"振幅"}},"angularVelocity":{"type":13,"value":[10],"editor":{"tooltip":"角速度"}},"frequency":{"type":13,"value":[10],"editor":{"tooltip":"频率"}},"offset":{"type":13,"value":[0.5],"range":[0,1],"editor":{"tooltip":"偏距"}},"toLeft":{"type":1,"value":[true],"editor":{"type":"boolean","tooltip":"向左（方向）"}}}}]}]]],0,0,[],[],[]]]]